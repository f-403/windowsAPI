// 修改内存页为可执行-在数组指针上执行SHELLCODE.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//

#include <iostream>
#include <Windows.h>

int main()
{
	unsigned char data[] = {
	0x40, 0x55, 0x53, 0x56, 0x57, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56, 0x41, 0x57, 0x48, 0x8B, 0xEC,
	0x48, 0x83, 0xEC, 0x78, 0x45, 0x33, 0xC0, 0xC7, 0x45, 0xB0, 0x55, 0x53, 0x45, 0x52, 0x44, 0x88,
	0x45, 0xBA, 0xC7, 0x45, 0xB4, 0x33, 0x32, 0x2E, 0x44, 0x66, 0xC7, 0x45, 0xB8, 0x4C, 0x4C, 0xC7,
	0x45, 0xC0, 0x4D, 0x65, 0x73, 0x73, 0xC7, 0x45, 0xC4, 0x61, 0x67, 0x65, 0x42, 0xC7, 0x45, 0xC8,
	0x6F, 0x78, 0x41, 0x00, 0x65, 0x48, 0x8B, 0x04, 0x25, 0x60, 0x00, 0x00, 0x00, 0xC7, 0x45, 0xD0,
	0x4C, 0x6F, 0x61, 0x64, 0xC7, 0x45, 0xD4, 0x4C, 0x69, 0x62, 0x72, 0xC7, 0x45, 0xD8, 0x61, 0x72,
	0x79, 0x41, 0x4C, 0x8B, 0x78, 0x18, 0x49, 0x83, 0xC7, 0x20, 0x44, 0x88, 0x45, 0xDC, 0xC7, 0x45,
	0xE0, 0x47, 0x65, 0x74, 0x50, 0xC7, 0x45, 0xE4, 0x72, 0x6F, 0x63, 0x41, 0xC7, 0x45, 0xE8, 0x64,
	0x64, 0x72, 0x65, 0x4D, 0x8B, 0x77, 0x08, 0x66, 0xC7, 0x45, 0xEC, 0x73, 0x73, 0x44, 0x88, 0x45,
	0xEE, 0x4C, 0x89, 0x45, 0x60, 0x4C, 0x89, 0x45, 0x58, 0xE9, 0xC4, 0x00, 0x00, 0x00, 0x49, 0x8B,
	0x76, 0x20, 0x48, 0x63, 0x46, 0x3C, 0x48, 0x8B, 0x84, 0x30, 0x88, 0x00, 0x00, 0x00, 0x48, 0x8B,
	0xC8, 0x48, 0xC1, 0xE9, 0x20, 0x85, 0xC9, 0x0F, 0x84, 0xA1, 0x00, 0x00, 0x00, 0x8B, 0xC8, 0x44,
	0x89, 0x45, 0x48, 0x8B, 0x44, 0x31, 0x18, 0x89, 0x45, 0x50, 0x85, 0xC0, 0x0F, 0x84, 0x8C, 0x00,
	0x00, 0x00, 0x44, 0x8B, 0x64, 0x31, 0x24, 0x8B, 0x54, 0x31, 0x1C, 0x4C, 0x03, 0xE6, 0x44, 0x8B,
	0x6C, 0x31, 0x20, 0x4C, 0x03, 0xEE, 0x48, 0x89, 0x55, 0xA8, 0x41, 0x0F, 0xB7, 0x04, 0x24, 0x41,
	0x8B, 0x5D, 0x00, 0x48, 0x03, 0xDE, 0x48, 0x8D, 0x0C, 0x82, 0x48, 0x8B, 0xD3, 0x8B, 0x3C, 0x31,
	0x48, 0x8D, 0x4D, 0xD0, 0x48, 0x03, 0xFE, 0xE8, 0x90, 0x00, 0x00, 0x00, 0x85, 0xC0, 0x48, 0x8B,
	0xCF, 0x48, 0x8B, 0xD3, 0x48, 0x0F, 0x44, 0x4D, 0x58, 0x48, 0x89, 0x4D, 0x58, 0x48, 0x8D, 0x4D,
	0xE0, 0xE8, 0x76, 0x00, 0x00, 0x00, 0x45, 0x33, 0xC0, 0x85, 0xC0, 0x48, 0x0F, 0x44, 0x7D, 0x60,
	0x48, 0x8B, 0xDF, 0x48, 0x89, 0x5D, 0x60, 0x48, 0x85, 0xFF, 0x74, 0x09, 0x48, 0x8B, 0x55, 0x58,
	0x48, 0x85, 0xD2, 0x75, 0x28, 0x8B, 0x45, 0x48, 0x49, 0x83, 0xC5, 0x04, 0x48, 0x8B, 0x55, 0xA8,
	0xFF, 0xC0, 0x49, 0x83, 0xC4, 0x02, 0x89, 0x45, 0x48, 0x3B, 0x45, 0x50, 0x72, 0x8C, 0x4D, 0x8B,
	0x76, 0x08, 0x4D, 0x3B, 0xF7, 0x0F, 0x85, 0x33, 0xFF, 0xFF, 0xFF, 0xEB, 0x1B, 0x48, 0x8D, 0x4D,
	0xB0, 0xFF, 0xD2, 0x48, 0x8D, 0x55, 0xC0, 0x48, 0x8B, 0xC8, 0xFF, 0xD3, 0x45, 0x33, 0xC9, 0x45,
	0x33, 0xC0, 0x33, 0xD2, 0x33, 0xC9, 0xFF, 0xD0, 0x33, 0xC0, 0x48, 0x83, 0xC4, 0x78, 0x41, 0x5F,
	0x41, 0x5E, 0x41, 0x5D, 0x41, 0x5C, 0x5F, 0x5E, 0x5B, 0x5D, 0xC3, 0xCC, 0x44, 0x8A, 0x01, 0x33,
	0xC0, 0x4C, 0x8B, 0xDA, 0x44, 0x8B, 0xD0, 0x45, 0x84, 0xC0, 0x74, 0x0E, 0x4C, 0x8B, 0xC9, 0x49,
	0xFF, 0xC1, 0x41, 0xFF, 0xC2, 0x41, 0x38, 0x01, 0x75, 0xF5, 0x44, 0x8B, 0xC8, 0xEB, 0x06, 0x41,
	0xFF, 0xC1, 0x48, 0xFF, 0xC2, 0x38, 0x02, 0x75, 0xF6, 0x45, 0x3B, 0xD1, 0x75, 0x23, 0x8B, 0xD0,
	0x45, 0x84, 0xC0, 0x74, 0x16, 0x4C, 0x2B, 0xD9, 0x46, 0x3A, 0x04, 0x19, 0x75, 0x0D, 0x48, 0xFF,
	0xC1, 0xFF, 0xC2, 0x44, 0x8A, 0x01, 0x45, 0x84, 0xC0, 0x75, 0xED, 0x41, 0x3B, 0xD2, 0x0F, 0x94,
	0xC0, 0xC3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	};

	DWORD old;
	VirtualProtect(data, sizeof(data), PAGE_EXECUTE_READWRITE, &old);
	void* t = reinterpret_cast<void*>(data);
	((void(*)())  t)();
	//((void(*)())  data)();
	
	

}

